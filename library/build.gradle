apply plugin: 'com.android.library'

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.0'

    defaultConfig {
        versionCode 7
        versionName '0.7'

        minSdkVersion 8
        targetSdkVersion 24

        consumerProguardFiles 'proguard-library.txt'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile project(':commons')
    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:0.5'
}

// android lint.jar configuration

configurations {
    lintChecks
}

dependencies {
    lintChecks project(path: ':linter', configuration: 'lintChecks')
}

task copyLinterJar(type: Copy) {
    from(configurations.lintChecks) {
        rename { 'lint.jar' }
    }
    into "$project.buildDir/intermediates/lint/"
}

project.afterEvaluate {
    def compileLintTask = project.tasks.find { it.name == 'compileLint' }
    compileLintTask.dependsOn(copyLinterJar)
}

// android maven exports
apply plugin: 'com.github.dcendents.android-maven'

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
